{
  "componentName": "result-TabStrip-2025-09-08T12-43-05-402Z.md",
  "imports": [
    "import { TabStripClassComponent, TabStripTab } from '@progress/kendo-react-layout';",
    "import { Editor, EditorTools } from '@progress/kendo-react-editor';",
    "import { TabStripClassComponent } from '@progress/kendo-react-layout';",
    "import { TabStripTab } from '@progress/kendo-react-layout';",
    "import { Editor } from '@progress/kendo-react-editor';",
    "import { EditorTools } from '@progress/kendo-react-editor';"
  ],
  "examples": [
    {
      "title": "Example 1",
      "code": "import React from 'react';\nimport { TabStripClassComponent, TabStripTab } from '@progress/kendo-react-layout';\n\nconst App = () => (\n    <TabStripClassComponent>\n        <TabStripTab title=\"First Tab\">\n            <div>Content of the first tab</div>\n        </TabStripTab>\n        <TabStripTab title=\"Second Tab\">\n            <div>Content of the second tab</div>\n        </TabStripTab>\n    </TabStripClassComponent>\n);\n\nexport default App;",
      "description": "React component implementation example"
    },
    {
      "title": "Example 2",
      "code": "import { Editor, EditorTools } from '@progress/kendo-react-editor';\n\nconst {\n    Bold, Italic, Underline, Strikethrough,\n    Subscript, Superscript, ForeColor, BackColor,\n    CleanFormatting, AlignLeft, AlignCenter, AlignRight, AlignJustify,\n    Indent, Outdent, OrderedList, UnorderedList,\n    NumberedList, BulletedList, Undo, Redo,\n    FontSize, FontName, FormatBlock, Link, Unlink,\n    InsertImage, ViewHtml, InsertTable, InsertFile,\n    SelectAll, Print, Pdf, TableProperties, TableCellProperties,\n    AddRowBefore, AddRowAfter, AddColumnBefore, AddColumnAfter,\n    DeleteRow, DeleteColumn, DeleteTable, MergeCells, SplitCell\n} = EditorTools;",
      "description": "React component implementation example"
    }
  ],
  "props": {
    "animation": {
      "name": "animation",
      "fullName": "",
      "summary": "Enables the tab animation.",
      "syntax": {
        "return": {
          "type": "boolean"
        }
      }
    },
    "buttonScrollSpeed": {
      "name": "buttonScrollSpeed",
      "fullName": "",
      "summary": ">- Sets the tab list scroll speed in pixels when scrolling via clicking the previous or next button.",
      "syntax": {
        "return": {
          "type": "number"
        }
      }
    },
    "children": {
      "name": "children",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "className": {
      "name": "className",
      "fullName": "",
      "summary": "Specifies the CSS class names of the TabStrip component.",
      "syntax": {
        "return": {
          "type": "string"
        }
      }
    },
    "dir": {
      "name": "dir",
      "fullName": "",
      "summary": "Sets the direction of the TabStrip component.",
      "syntax": {
        "return": {
          "type": "string"
        }
      }
    },
    "id": {
      "name": "id",
      "fullName": "",
      "summary": "|- Sets the `id` property of the top div element of the component.",
      "syntax": {
        "return": {
          "type": "string"
        }
      }
    },
    "keepTabsMounted": {
      "name": "keepTabsMounted",
      "fullName": "",
      "summary": ">- Defines if the tabs will remain mounted after another tab is selected. Defaults to `false` .",
      "syntax": {
        "return": {
          "type": "boolean"
        }
      }
    },
    "mouseScrollSpeed": {
      "name": "mouseScrollSpeed",
      "fullName": "",
      "summary": ">- **Deprecated**. The mouse scroll is implemented via CSS and the property is no longer needed.",
      "syntax": {
        "return": {
          "type": "number"
        }
      }
    },
    "nextButton": {
      "name": "nextButton",
      "fullName": "",
      "summary": "\"Defines the custom component that will be rendered as a next button.\\r\\nTo remove the button, set a function which returns null \\n`() => null`\\n.\"",
      "syntax": {
        "return": {
          "type": "ComponentType"
        }
      }
    },
    "onSelect": {
      "name": "onSelect",
      "fullName": "",
      "summary": "Fires each time the user makes a selection.",
      "syntax": {
        "return": {
          "type": "'(e: TabStripSelectEventArguments) => void'"
        }
      }
    },
    "prevButton": {
      "name": "prevButton",
      "fullName": "",
      "summary": "\"Defines the custom component that will be rendered as a previous button.\\r\\nTo remove the button, set a function which returns null \\n`() => null`\\n.\"",
      "syntax": {
        "return": {
          "type": "ComponentType"
        }
      }
    },
    "renderAllContent": {
      "name": "renderAllContent",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "boolean"
        }
      }
    },
    "scrollButtons": {
      "name": "scrollButtons",
      "fullName": "",
      "summary": "Sets the visibility of the scroll buttons.",
      "syntax": {
        "return": {
          "type": "ScrollButtons"
        }
      }
    },
    "scrollButtonsPosition": {
      "name": "scrollButtonsPosition",
      "fullName": "",
      "summary": "\"Sets the scroll buttons position according to the tab list.\\r\\nThe previous options 'around', 'before', 'after' are going to be deprecated in favor of 'split', 'start', 'end'.\"",
      "syntax": {
        "return": {
          "type": "ScrollButtonsPosition"
        }
      }
    },
    "scrollable": {
      "name": "scrollable",
      "fullName": "",
      "summary": "Determines whether the TabStrip will be scrollable.",
      "syntax": {
        "return": {
          "type": "boolean"
        }
      }
    },
    "selected": {
      "name": "selected",
      "fullName": "",
      "summary": ">- Sets the index of the selected TabStripTab component ([see example]({% slug tabs_tabstrip %}#toc-tabs-on-initial-loading)).",
      "syntax": {
        "return": {
          "type": "number"
        }
      }
    },
    "size": {
      "name": "size",
      "fullName": "",
      "summary": "Specifies the possible sizes of the TabStrip.",
      "syntax": {
        "return": {
          "type": "TabStripSize"
        }
      }
    },
    "tabAlignment": {
      "name": "tabAlignment",
      "fullName": "",
      "summary": "\"Sets the alignment of the tabs. Defaults to \\n`start`\\n.\\r\\n\\r\\nThe available options are:\\r\\n- \\n`\\\"start\\\"`\\n&mdash;Aligns the tabs at the start of the \\n`TabStripNavigation`\\n.\\r\\n- \\n`\\\"center\\\"`\\n&mdash;Aligns the tabs in the center of the \\n`TabStripNavigation`\\n.\\r\\n- \\n`\\\"end\\\"`\\n&mdash;Aligns the tabs at the end of the \\n`TabStripNavigation`\\n.\\r\\n- \\n`\\\"justify\\\"`\\n&mdash;Justifies the tabs inside the \\n`TabStripNavigation`\\n.\\r\\n- \\n`\\\"stretched\\\"`\\n&mdash;Stretches the tabs inside the \\n`TabStripNavigation`\\n.\"",
      "syntax": {
        "return": {
          "type": "string"
        }
      }
    },
    "tabContentStyle": {
      "name": "tabContentStyle",
      "fullName": "",
      "summary": "Sets the style of the TabStripContent component.",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "tabIndex": {
      "name": "tabIndex",
      "fullName": "",
      "summary": "|- Sets the `tabIndex` of the TabStripNavigation.",
      "syntax": {
        "return": {
          "type": "number"
        }
      }
    },
    "tabPosition": {
      "name": "tabPosition",
      "fullName": "",
      "summary": "\"Sets the position of the tabs. Defaults to \\n`top`\\n.\\r\\n\\r\\nThe available options are:\\r\\n- \\n`\\\"top\\\"`\\n&mdash;Renders the \\n`TabStripNavigation`\\n to the top of the TabStrip.\\r\\n- \\n`\\\"bottom\\\"`\\n&mdash;Renders the \\n`TabStripNavigation`\\n to the bottom of the TabStrip.\\r\\n- \\n`\\\"left\\\"`\\n&mdash;Renders the \\n`TabStripNavigation`\\n to the left of the TabStrip.\\r\\n- \\n`\\\"right\\\"`\\n&mdash;Renders the \\n`TabStripNavigation`\\n to the right of the TabStrip.\"",
      "syntax": {
        "return": {
          "type": "string"
        }
      }
    },
    "constructor": {
      "name": "constructor",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": ""
        }
      }
    },
    "horizontalScroll": {
      "name": "horizontalScroll",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "itemsNavRef": {
      "name": "itemsNavRef",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "navigation": {
      "name": "navigation",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "renderContent": {
      "name": "renderContent",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "resizeObserver": {
      "name": "resizeObserver",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "tabStripRef": {
      "name": "tabStripRef",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": "any"
        }
      }
    },
    "contentPanelId": {
      "name": "contentPanelId",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": ""
        }
      }
    },
    "navItemId": {
      "name": "navItemId",
      "fullName": "",
      "summary": "",
      "syntax": {
        "return": {
          "type": ""
        }
      }
    }
  }
}